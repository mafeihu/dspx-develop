<?php
namespace app\api\controller;
use think\Controller;
use think\Db;
use think\Request;
class User extends Common{
    public function  _initialize(){
        parent::_initialize(); // TODO: Change the autogenerated stub
    }
    /**
     * 获取用户信息
     */
    public function user_info(){
        if (Request::instance()->isPost()) {
            //待优化
            $user = $this->checklogin();
            $user['header_img'] = $user['header_img'];
            $user['follow'] = DB::name('Follow')->where(['user_id' => $user['member_id']])->count();
            $user['follow_to'] = DB::name('Follow')->where(['user_id2' => $user['member_id']])->count();
            $user['live_count'] = DB::name('Live_store')->where(['user_id' => $user['member_id'], 'is_del' => 1])->count();
            $userinfo = DB::name("merchants")->where("member_id", $user["member_id"])->find();
            if (!$userinfo) {
                $user["apply_state"] = 0;
            } else {
                $user["apply_state"] = $userinfo["apply_state"];
            }
            //充值状态
            $user["pay_state"] = $userinfo["pay_state"];
            //今日收益
            $user["today_earnings"] = DB::name("give_gift")->where(["user_id2" => $user["member_id"], "date" => date("Y-m-d")])->sum("jewel");
            //昨日收益
            $user["yesterday_earnings"] = DB::name("give_gift")->where(["user_id2" => $user["member_id"], 'date' => date("Y-m-d", strtotime("-1 day"))])->sum("jewel");
            //本月收益
            $this_month = strtotime(date("Y-m"));
            $user["month_earnings"] = DB::name("give_gift")->where('date', 'gt', $this_month)->sum("jewel");
            $give_count = DB::name('Give_gift')->where(['user_id' => $user['member_id']])->sum('jewel');
            $give_count ? $user['give_count'] = $give_count : $user['give_count'] = "0";

//        $authen = M('User_authen')->where(['user_id'=>$user['user_id']])->find();
//        if ($authen){
//            $user['is_authen'] = $authen['status'];
//        }else{
//            $user['is_authen'] = "-1";
//        }
            success($user);
        }
    }
    /**
     * @编辑个人资料
     */
    public function edit_user(){
        if (Request::instance()->isPost()) {
            $user = $this->checklogin();
            $params = Request::instance()->request();
            empty($params["header_img"]) ? true : $data["header_img"] = $params["header_img"];
            empty($params["username"]) ? true : $data["username"] = $params["username"];
            empty($params["sex"]) ? true : $data["sex"] = $params["sex"];
            empty($params["birth_day"]) ? true : $data["birth_day"] = $params["birth_day"];
            empty($params["province"]) ? true : $data["province"] = $params["province"];
            empty($params["city"]) ? true : $data["city"] = $params["city"];
            empty($params["area"]) ? true : $data["area"] = $params["area"];
            empty($params["signature"]) ?  true : $data["signature"] = $params["signature"];

            if (!empty($username)) {
                $user = DB::name('member')->where(['username' => $username])->find();
                if ($user) {
                    error('昵称已存在!');
                }
            }
            //待处理
            $data['uptime'] = time();
            $old_img = DB::name('member')->where(['member_id' => $user['member_id']])->value('header_img');
            if (DB::name('member')->where(['member_id' => $user['member_id']])->update($data)) {
                //bug(旧文件的删除
                $imgs = DB::name('member')->where(['member_id' => $user['member_id']])->value('header_img');
                success($imgs);
            } else {
                error('失败!');
            }
        }
    }

    /**
     *@充值列表
     */
    public function price_list(){

        $user = $this->checklogin();
        $list = Db::name('PriceList')->order("price asc")->select();
        if (!$list){$list=[];}
        success(['amount'=>$user['b_diamond'],'list'=>$list]);
    }

    /**
     *@充值记录
     */
    public function recharge_record()
    {
        if (Request::instance()->isPost()) {
            $member = $this->checklogin();
            $map['member_id'] = $member['member_id'];
            $map['pay_state'] = '2';
            $p = input('p');
            empty($p) && $p = 1;
            $pagesize = input('pagesize');
            $pagesize ? $pagesize : $pagesize = 10;
            $count = Db::name('Recharge')->where($map)->count();
            $page = ceil($count / $pagesize);
            $data = Db::name('Recharge')->field('amount,uptime,pay_type,meters,zeng')
                ->where($map)->limit(($p - 1) * $pagesize, $pagesize)->select();
            foreach($data as &$val){
                switch($val['pay_type']){
                    case 'wx':
                        $val['pay_type'] = '微信';
                        break;
                    case 'alipay':
                        $val['pay_type'] = '支付宝';
                        break;
                    case 'uppay':
                        $val['pay_type'] = '银联';
                        break;
                    case 'online':
                        $val['pay_type'] = '后台';
                        break;
                    case 'applepay':
                        $val['pay_type'] = '苹果内购';
                        break;
                }
                $val['meters'] = (string)($val['meters'] + $val['zeng']);
            }
            success(['page' => $page,'data' => $data]);
        }

    }

    /**
     *@用户关注列表
     */
    public function user_follow(){
        $member = $this->checklogin();
        $p = input('p');
        $p  ?   $p  :   $p = 1;
        $pagesize = input('pagesize');
        $pagesize   ?   $pagesize   :   $pagesize = 10;
        $where = [
            'a.user_id' =>  $member['member_id'],
            'a.is_delete'   =>  '1',
            'b.is_delete'   => '0'
        ];
        $count = Db::name('follow')->alias('a')
            ->join('th_merchants b','a.user_id2 = b.member_id')
            ->where($where)->count();
        $list =  Db::name('follow')->alias('a')
            ->field('a.follow_id,b.member_id,b.live_id,b.merchants_name,b.merchants_img,b.merchants_content,b.month_sales')
            ->join('th_merchants b','a.user_id2 = b.member_id')
            ->where($where)->order("a.intime desc")
            ->limit(($p-1)*$pagesize,$pagesize)->select();
        $page = ceil($count/$pagesize);
        success(['page'=>$page,'list'=>$list]);
    }

    /**
     *@取消关注
     */
    public function del_user_follow(){
        $member = $this->checklogin();
        $follow_id = input('follow_id');
        if(!$follow_id)         error("参数错误");
        $result = Db::name('follow')->where(['user_id'=>$member['member_id'],'follow_id'=>$follow_id])->update(['is_delete'=>'2','uptime'=>time()]);
        if($result){
            success("操作成功");
        }else{
            error("操作失败");
        }
    }

    /**
     *@取消关注
     */
    public function del_all_follow(){
        $member = $this->checklogin();
        $result = Db::name('follow')->where(['user_id'=>$member['member_id']])->update(['is_delete'=>'2','uptime'=>time()]);
        if($result){
            success("操作成功");
        }else{
            error("操作失败");
        }
    }

    public function is_this(){
        $version = input('version');
        empty($version) ? error('参数错误!') : true;
        $ve = Db::name('System')->where(['id'=>1])->value('ios_version');
        if ($ve==$version){
            $result = "1";
        }else{
            $result = "2";
        }
        success($result);
    }


}